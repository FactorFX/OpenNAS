#!/bin/sh
#
# Part of OpenNas (http://open-nas.com).
# Copyright (c) 2012-2013
# All rights reserved.
#
#
# PROVIDE: ocsinventory_agent
# REQUIRE: DAEMON
# KEYWORD: shutdown
# XQUERY: -i "count(//ocsinventory_agent/enable) > 0" -o "0" -b
# RCVAR: ocsinventory_agent
#


. /etc/rc.subr
. /etc/util.subr
. /etc/configxml.subr

name="ocsinventory_agent"
rcvar=`set_rcvar`
command="/usr/local/bin/ocsinventory-agent"

load_rc_config $name
: ${ocsinventory_agent_enable:="NO"}

# Custom commands
extra_commands=mkconf
mkconf_cmd=${name}_mkconf
start_precmd=${name}_mkconf
start_cmd=${name}_start
status_cmd=${name}_status
stop_cmd=${name}_stop

basevardir="/var/lib/ocsinventory-agent"
logfile="/var/log/ocsinventory-agent.log"
ocsinventory_agent_config="/usr/local/etc/ocsinventory/ocsinventory-agent.cfg"

pidfile="/var/run/ocsinventory-agent.pid"

# Check if required directories exists.
[ ! -d "${basevardir}" ] && mkdir -p "${basevardir}"

ocsinventory_agent_start()
{
	if ocsinventory_agent_running; then
		echo "${name} is already running... with PID `cat ${pidfile}`"
	else
		echo "Starting ${name}..."
		${command} -f
		${command} ${rc_flags}
	fi
}

ocsinventory_agent_restart()
{
	ocsinventory_agent_stop
	ocsinventory_agent_start
}

ocsinventory_agent_status()
{
	if ocsinventory_agent_running; then
        echo "${name} is running."
        return 0
    else
        echo "${name} is not running."
        return 1
    fi
}

ocsinventory_agent_stop()
{
		if ocsinventory_agent_running; then
			/bin/kill `cat ${pidfile}`
		else
			echo "${name} is not running."
		fi
}

ocsinventory_agent_mkconf()
{	
	rc_flags="-D ${rc_flags}"
	
	/usr/local/bin/xml sel -t -m "//ocsinventory_agent" \
		-o "basevardir=${basevardir}" -n \
		-o "logfile=${logfile}" -n \
		-v "concat('server=', server)" -n \
		-i "string-length(realm) > 0" \
			-v "concat('realm=', realm)" -n \
		-b \
		-i "string-length(ocs_user) > 0" \
			-v "concat('user=', ocs_user)" -n \
		-b \
		-i "string-length(password) > 0" \
			-v "concat('password=\"', password, '\"')" -n \
		-b \
		-i "string-length(proxy) > 0" \
			-v "concat('proxy=', proxy)" -n \
		-b \
		-i "string-length(ssl) > 0" \
			-v "concat('ssl=', ssl)" -n \
		-b \
		-i "string-length(ocs_cacert) > 0" \
			-v "concat('ca=', ocs_cacert)" -n \
		-b \
		-i "string-length(tag) > 0" \
			-v "concat('tag=', tag)" -n \
		-b \
		-i "string-length(nosoftware) > 0" \
			-v "concat('nosoftware=', nosoftware)" -n \
		-b \
		${configxml_file} | /usr/local/bin/xml unesc > ${ocsinventory_agent_config}

}

ocsinventory_agent_running() 
{
	if [ `pgrep -f "${command} ${rc_flags}" -F ${pidfile}` ]; then
		return 0
	else
		return 1
	fi 
}

run_rc_command "$1"
