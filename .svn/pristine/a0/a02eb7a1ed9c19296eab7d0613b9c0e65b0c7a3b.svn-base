#!/bin/sh

# Part of NAS4Free (http://www.nas4free.org).
# Copyright (c) 2012-2014 The NAS4Free Project <info@nas4free.org>.
# All rights reserved.

. /etc/configxml.subr

mountbase=/mnt
log="user.notice"
name="hastswitch"

case "$1" in
start)
	# import ZFS pool
	/usr/local/bin/xml sel -t \
		-m "//zfs/pools/*[hastpool]" \
			-v "name" \
			-n \
		-b \
	    ${configxml_file} | /usr/local/bin/xml unesc | \
	while read _name; do
		if [ -n "$_name" ]; then
		    /usr/bin/logger -p $log -t $name "Import ZFS pool ${_name}."
		    /sbin/zpool import -f "${_name}"
		fi
	done

	# mount GPT/UFS
	/usr/local/bin/xml sel -t \
		-m "//mounts/*[type='hvol']" \
			-v "concat(mdisk, ' ', partition, ' ', devicespecialfile, ' ', fstype, ' ', sharename)" \
			-v "concat(' ', accessrestrictions/mode, ' ', accessrestrictions/owner, ' ', accessrestrictions/group)" \
			-i "count(readonly) > 0" -o " -r" -b \
			-n \
		-b \
	    ${configxml_file} | /usr/local/bin/xml unesc | \
	while read _mdisk _partition _device _fs _share _mode _owner _group _ro; do
		if [ -n "$_device" -a -c "$_device" ]; then
		    /usr/bin/logger -p $log -t $name "Mount ${_device} (${_mdisk}${_partition}) on ${mountbase}/${_share}."
		    /sbin/fsck -p -y -t "${_fs}" "${_device}"
		    /bin/mkdir -p "${mountbase}/${_share}"
		    /sbin/mount -t ufs ${_ro} "${_device}" "${mountbase}/${_share}"
		    /bin/chmod "${_mode}" "${mountbase}/${_share}"
		    /usr/sbin/chown "${_owner}" "${mountbase}/${_share}"
		    /usr/bin/chgrp "${_group}" "${mountbase}/${_share}"
		fi
	done

	# start services
	/etc/rc.d/samba start
	;;

stop)
	# stop services
	/etc/rc.d/samba forcestop

	# unmount GPT/UFS
	/usr/local/bin/xml sel -t \
		-m "//mounts/*[type='hvol']" \
			-v "concat(mdisk, ' ', partition, ' ', devicespecialfile, ' ', fstype, ' ', sharename)" \
			-n \
		-b \
	    ${configxml_file} | /usr/local/bin/xml unesc | \
	while read _mdisk _partition _device _fs _share; do
		if [ -n "$_device" ]; then
		    /usr/bin/logger -p $log -t $name "Unmount ${_device} (${_mdisk}${_partition}) from ${mountbase}/${_share}."
		    /sbin/umount "${mountbase}/${_share}" 2>/dev/null
		fi
	done

	# export ZFS pool
	/usr/local/bin/xml sel -t \
		-m "//zfs/pools/*[hastpool]" \
			-v "name" \
			-n \
		-b \
	    ${configxml_file} | /usr/local/bin/xml unesc | \
	while read _name; do
		if [ -n "$_name" ]; then
		    /usr/bin/logger -p $log -t $name "Export ZFS pool ${_name}."
		    /sbin/zpool export -f "${_name}"
		fi
	done
	;;

shutdown)
	# state to backup
	/usr/local/bin/xml sel -t \
		-m "//vinterfaces/carp" \
			-v "if" \
			-n \
		-b \
	    ${configxml_file} | /usr/local/bin/xml unesc | \
	while read _if; do
		if [ -n "$_if" ]; then
		    /usr/bin/logger -p $log -t $name "Change ${_if} state to BACKUP."
		    /sbin/ifconfig "${_if}" state backup 2>/dev/null
		    /bin/sleep 1
		fi
	done
	/bin/sleep 3
	;;

*)
	logger -p $log -t $name "Unsupported command $1."
	;;
esac
